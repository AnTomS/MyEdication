package com.example.jetpackcompose

class jetpack_copmose {

    /*
   1 принцип jetoack
   реактивное программирование. это Котлин FLow Observable RxJava/ReactiveX, которые позволяют наблюдать за изменением состояние

   2 принцип jetoack
   ui зависит от стейта.
   ui отрисосывается взависимости от состояния. Если состояние изменилось, то ui перерисовывается
   и вместе эти 2 принципа работают так. Пользователь посылает действие на экран, к примеру вводит слово в окно ввода.
   ui отрисовывается в зависимости от действий пользователя, в данном случае Котлин FLow уведомляет своих подписчиков, что данные изменились.
   И от этого меняется состояние, и новое состояние отображается в ui

   3 принцип jetoack
   иммутабельность. делать объекты и переменные мутабельными для изменения состояния. Флоу будет подписыватсья на новые данные, которые мы положили
   в переменную. Благодаря этмоу будет работать 1 принцип.

   4 принцип jetoack чистота функции
   функция всегда должна возвразать значение. По сути это функциональное программирование
     */
}